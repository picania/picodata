diff --git a/src/box/sql.c b/src/box/sql.c
index dba96d153..3c5ca75e3 100644
--- a/src/box/sql.c
+++ b/src/box/sql.c
@@ -1231,8 +1231,10 @@ space_column_default_expr(uint32_t space_id, uint32_t fieldno)
 {
 	struct space *space;
 	space = space_cache_find(space_id);
-	assert(space != NULL);
-	assert(space->def != NULL);
+	if (space == NULL) // assert
+		panic("space == NULL in %s:%d", __FILE__, __LINE__);
+	if (space->def == NULL) // assert
+		panic("space->def == NULL in %s:%d", __FILE__, __LINE__);
 	if (space->def->opts.is_view)
 		return NULL;
 	assert(space->def->field_count > fieldno);
@@ -1623,7 +1625,7 @@ sql_check_create(const char *name, uint32_t space_id, uint32_t func_id,
 {
 	const struct space *space = space_by_id(space_id);
 	if (space == NULL) {
-		diag_set(ClientError, ER_NO_SUCH_SPACE, space_name(space));
+		diag_set(ClientError, ER_NO_SUCH_SPACE, "space is NULL");
 		return -1;
 	}
 	struct tuple_constraint_def *cdefs;
@@ -1638,7 +1640,8 @@ sql_check_create(const char *name, uint32_t space_id, uint32_t func_id,
 
 	if (is_field_ck) {
 		struct func *func = func_by_id(func_id);
-		assert(func != NULL);
+		if (func == NULL)
+			panic("func == NULL in %s:%d", __FILE__, __LINE__);
 		const char *field_name = space->def->fields[fieldno].name;
 		if (!func_sql_expr_has_single_arg(func, field_name)) {
 			diag_set(ClientError, ER_CREATE_CK_CONSTRAINT, name,
